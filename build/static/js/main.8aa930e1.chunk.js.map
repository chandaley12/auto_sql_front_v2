{"version":3,"sources":["Store/Reducers.js","Store/index.js","Functions/index.js","components/Landing/Account/GoogleLoginButton.jsx","components/Landing/Account/AccountView.jsx","components/Landing/Account/index.jsx","components/Landing/index.jsx","components/Dashboard/generateVuerd.jsx","components/Dashboard/DashBoardComponents/DashBoardModal.jsx","components/Dashboard/DashBoardButton/DashBoardModalButton.jsx","components/Dashboard/DashBoardComponents/DashBoardDrawer.jsx","components/Dashboard/DashBoardButton/DashBoardDrawerButton.jsx","Functions/Erd.js","components/Dashboard/DashBoardComponents/ModalItemNewErd.jsx","components/Dashboard/DashBoardComponents/DrawerItemErdList.jsx","components/Dashboard/DashBoardComponents/ModalItemSaveButton.jsx","components/Dashboard/DashBoardComponents/DrawerItemCommits.jsx","components/Dashboard/index.jsx","components/Root.js","index.js","Store/ErdData/index.js","Store/User/index.js","Store/VuerdData/index.js"],"names":["persistConfig","key","storage","whitelist","rootReducer","combineReducers","User","UserReducer","ErdData","ErdDataReducer","VuerdData","VuerdDataReducer","persistReducer","Store","createStore","Reducers","window","__REDUX_DEVTOOLS_EXTENSION__","Persistor","persistStore","axios","require","HEADERS","headers","CreateUser","userId","a","data","hashedEmail","post","process","JSON","stringify","then","response","console","log","catch","error","result","SigninUser","get","code","accessToken","refreshToken","GetUserAccessToken","getState","GoogleLoginButton","onLogin","isLogin","useState","onGoogleLoginSuccess","payload","id","profileObj","googleId","email","name","imageUrl","expires_in","tokenObj","split","useGoogleLogin","onSuccess","onFailure","clientId","signIn","loaded","Button","variant","onClick","style","backgroundColor","Avatar","src","AccountView","history","Card","aria-controls","CardHeader","paddingTop","paddingBottom","avatar","size","border","title","connect","dispatch","action","onGoogleLogin","props","setIsLogin","useEffect","useStyles","makeStyles","theme","background","root","display","justifyContent","alignItems","minHeight","card","width","borderRadius","boxShadow","media","height","marginTop","marginBottom","margin","heading","center","loginButton","StyledChip","withStyles","Chip","Landing","setGotoAutoSQL","label","push","classes","className","Container","CardContent","CardMedia","image","Typography","gutterBottom","gotoAutoSqlChip","color","onCurrentErd","assignCurrentErd","erdData","useLayoutEffect","generateVuerd","editor","container","document","querySelector","children","item","removeChild","createElement","appendChild","initLoadJson","addEventListener","parentElement","clientWidth","clientHeight","dispatchEvent","Event","modal","zIndex","paper","palette","shadows","padding","spacing","DashBoardModal","openHooks","open","setOpen","Modal","aria-labelledby","aria-describedby","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","Icon","DashBoardModalButton","Component","component","marginRight","DashBoardDrawer","Drawer","anchor","DrawerPosition","DrawerWidth","DrawerName","DashBoardDrawerButton","onSetFunction","maxContentLength","maxBodyLength","_erdName","_erdId","_commitId","SaveErd","_data","token","ModalItemNewErd","erdName","setErdName","noValidate","autoComplete","TextField","onChange","event","preventDefault","target","value","position","top","startIcon","CreateErd","onWorkingErd","assignWorkingErd","list","setList","GetErdList","onLoadButtonClick","_erdData","GetErdForce","forceData","commitId","erdId","map","Accordion","AccordionSummary","AccordionDetails","ModalItemSaveButton","text","setText","setTimeout","CircularProgress","LookGoodDate","_DateObj","dateObj","Date","getFullYear","getMonth","getDate","LookGoodTime","getHours","getMinutes","getSeconds","primaryIndex","setPrimaryIndex","GetErdTimeLine","GetErd","Timeline","align","slice","reverse","TimelineItem","TimelineOppositeContent","TimelineSeparator","TimelineConnector","TimelineDot","TimelineContent","icon","createdWho","clickable","createdAt","extendedIcon","FloatingButton","StyledMenu","Menu","elevation","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","StyledMenuItem","primary","main","MenuItem","Dashboard","setErdData","anchorEl","setAnchorEl","dragging","setDragging","defaultPosition","x","y","scale","onDrag","onStop","Fab","aria-label","currentTarget","keepMounted","Boolean","fontSize","DrawerItemErdList","DrawerItemCommits","Root","basename","exact","path","ReactDOM","render","store","persistor","getElementById","WORKING_ERD","createAction","handleActions","state","Object","assign","LOGIN","LOGOUT","initalState","imageURL","CURRENT_ERD"],"mappings":"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","file":"static/js/main.8aa930e1.chunk.js","sourcesContent":["import {combineReducers} from \"redux\";\nimport {persistReducer} from \"redux-persist\";\nimport storage from 'redux-persist/lib/storage/session'\n\nimport UserReducer from \"./User\";\nimport ErdDataReducer from \"./ErdData\";\nimport VuerdDataReducer from \"./VuerdData\";\n\nconst persistConfig = {\n    key: 'root',\n    storage: storage,\n    whitelist: [\"User\"],\n};\n\nconst rootReducer = combineReducers({\n    User: UserReducer,\n    ErdData: ErdDataReducer,\n    VuerdData: VuerdDataReducer,\n});\n\nexport default persistReducer(persistConfig, rootReducer);","import Reducers from \"./Reducers\";\nimport {createStore} from \"redux\";\nimport {persistStore} from \"redux-persist\";\n\nexport const Store = createStore(\n    Reducers,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\nexport const Persistor = persistStore(Store);\n\nexport default {Store, Persistor};","import {connect} from 'react-redux'\nimport {onGoogleLogin} from \"../Store/User\";\n\nconst axios = require('axios')\n\nconst HEADERS = {\n    headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin' : '*',\n        'Access-Control-Allow-Methods' : 'GET,PUT,POST,DELETE,PATCH,OPTIONS',\n    }\n}\n\nexport function HashEmail(email)\n{\n    const SHA256 = require('crypto-js/sha256')\n    return SHA256(email).toString()\n}\nexport async function CreateUser(userId)\n{\n    let data = {\n        hashedEmail:  userId,\n    }\n    let result = await axios.post(process.env.REACT_APP_SERVER + \"user\",\n        JSON.stringify(data),\n        HEADERS\n    )\n        .then((response) => {\n            console.log(\"CreateUser - then\")\n            console.log(response)\n            return response;\n        })\n        .catch((error) => {\n            console.log(\"CreateUser - error\")\n            console.log(error)\n        })\n        return result;\n}\nexport async function SigninUser(userId)\n{\n    const axios = require('axios')\n    let data = {\n        hashedEmail: userId,\n    }\n    console.log(data);\n    return await axios.get(process.env.REACT_APP_SERVER + 'token/login/' + userId,\n        {\n            headers: {\n                'Content-Type': 'application/json',\n                'Access-Control-Allow-Origin' : '*',\n                'Access-Control-Allow-Methods' : 'GET,PUT,POST,DELETE,PATCH,OPTIONS',\n            }\n        }\n    )\n        .then((response) => {\n            console.log(\"SigninUser - then\")\n            console.log(response)\n            return {\n                code:response.code,\n                accessToken: response.data.accessToken,\n                refreshToken: response.data.refreshToken\n            };\n        })\n        .catch((error) => {\n            console.log(\"SigninUser - error\")\n            console.log(error)\n            return {\n                code:400\n            }\n        })\n}\nexport async function SendRefreshToken()\n{\n    let axios = require('axios')\n    let {Store} = require('Store')\n    return await axios.get(process.env.REACT_APP_SERVER + 'token/reissue',\n        {\n            headers: {\n                'Content-Type': 'application/json',\n                'Access-Control-Allow-Origin' : '*',\n                'Access-Control-Allow-Methods' : 'GET,PUT,POST,DELETE,PATCH,OPTIONS',\n                'Authorization': Store.getState().User.accessToken,\n            }\n        }\n    )\n}\nexport function IsUserLogin()\n{\n    // console.log('IsUserLogin')\n    let {Store} = require('Store')\n    if(Store.getState().User.accessToken)\n        return true;\n    else\n        return false;\n\n}\n// function RefreshToken()\n// {\n//     if(!IsUserLogin())\n//         return false;\n//\n//     let {Store} = require('Store')\n//\n//     let sendRefreshTokenPromise = SendRefreshToken()\n//         .catch((error) => {\n//             console.log('sendRefreshTokenPromise - error');\n//             console.log(error);\n//             let signinPromise = SigninUser(Store.getState().User.hashedEmail)\n//                 .then((result) => {\n//                     console.log(\"sendRefreshTokenPromise - error -> SigninUser - then\")\n//                     return result.accessToken;\n//                 })\n//                 .catch((error) => {\n//                     console.log(\"sendRefreshTokenPromise - error -> SigninUser - error\")\n//                     console.log(error)\n//                 })\n//         })\n// }\nexport function GetUserAccessToken()\n{\n    // console.log('GetUserAccessToken')\n    if(! IsUserLogin())\n        return false\n\n    let {Store} = require('Store')\n    return Store.getState().User.accessToken\n}","import React, {useState} from 'react'\n\n// 3rd-party\nimport {useGoogleLogin} from 'react-google-login'\n\n// material-ui\nimport Button from \"@material-ui/core/Button\";\nimport Avatar from '@material-ui/core/Avatar';\n\n// functions\nimport {CreateUser, HashEmail} from 'Functions'\nimport {SigninUser} from 'Functions'\n\nexport default function GoogleLoginButton({onLogin, isLogin})\n{\n    // state\n    const [user, setUser] = useState({});\n\n    // callback\n    const onGoogleLoginSuccess = async (response) => {\n        let payload = {\n            id: response.profileObj.googleId,\n            email: response.profileObj.email,\n            name: response.profileObj.name,\n            imageUrl: response.profileObj.imageUrl,\n            expires_in: response.tokenObj.expires_in,\n            userId: response.profileObj.email.split('@')[0],\n            accessToken: '',\n            refreshToken: '',\n        }\n\n\n\n        let signinPromise = await SigninUser(payload.userId).then(async result => {\n            if(result.code == 200) {\n                payload.accessToken = result.accessToken\n                payload.refreshToken = result.refreshToken\n                await onLogin(payload)\n                await isLogin(true)\n            }\n            else {\n                let response = await CreateUser(payload.userId)\n                await SigninUser(payload.userId).then(async result => {\n                    payload.accessToken = result.accessToken\n                    payload.refreshToken = result.refreshToken\n                    await onLogin(payload)\n                    await isLogin(true)\n                });\n            }\n            \n        }).catch(error => {\n            console.log(error)\n            \n        })\n        // signinPromise.then((result) => {\n        //     console.log(\"signinPromise then\")\n        //     payload.accessToken = result.accessToken\n        //     payload.refreshToken = result.refreshToken\n        //     onLogin(payload)\n        //     isLogin(true)\n        // })\n        // signinPromise.catch((error) =>{\n        //     console.log(\"signinPromise error - creating user\")\n        //     let createPromise = CreateUser(payload.userId)\n        //     createPromise.then((result) => {\n        //         console.log(\"CreateUser success\")\n        //         console.log(result)\n        //     })\n        //     createPromise.catch((error) => {\n        //         console.log(\"CreateUser error\")\n        //         console.log(error)\n        //     })\n            \n        // })\n    }\n    const onGoogleloginFail = (error) => {\n        console.log(error)\n    }\n\n    // login hooks\n    const {signIn, loaded} = useGoogleLogin({\n        onSuccess: onGoogleLoginSuccess,\n        onFailure: onGoogleloginFail,\n        clientId: process.env.REACT_APP_GOOGLE_CLIENT_ID,\n    })\n\n    return (\n        <Button\n            variant=\"contained\"\n            onClick={signIn}\n            style={{\n                backgroundColor: '#FFFFFF'\n            }}\n        >\n            <Avatar src=\"/images/google_icon.png\" />\n        </Button>\n    );\n}\n\n","import React, {useState} from \"react\";\n\n// material-ui\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Avatar from \"@material-ui/core/Avatar\";\n\n// Store\nimport {Store} from 'Store'\n\n// Style\nimport {withStyles} from \"@material-ui/core/styles\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nexport default function AccountView({history})\n{\n    return (\n        <>\n            <Card\n                aria-controls='account-card'\n            >\n                <CardHeader\n                    style={{\n                        paddingTop: '5px',\n                        paddingBottom: '5px',\n                    }}\n                    avatar={\n                        <Avatar\n                            src={Store.getState().User.imageUrl}\n                            size={100}\n                            style={{border: 0}}\n                        />\n                    }\n                    title={Store.getState().User.name}\n                />\n            </Card>\n        </>\n    );\n}","import React, {useEffect} from 'react'\n\n// components\nimport GoogleLoginButton from \"./GoogleLoginButton\";\nimport AccountView from './AccountView'\n\n// for redux\nimport {Store} from 'Store'\nimport {connect} from 'react-redux'\nimport {onGoogleLogin} from \"Store/User\";\n\n// functions\n\nconst Account = (props) => {\n\n    // state from landing index.js\n    //const [isLogin, setIsLogin] = useState(false)\n    \n    const isLogin = props.isLogin\n    const setIsLogin = props.setIsLogin\n\n    useEffect(() => {\n        if (Store.getState().User.id) {\n            setIsLogin(true)\n        }\n\n    }, [isLogin]);\n\n    // props\n    const {onLogin} = props\n\n    return (\n        <div>\n            {\n                isLogin\n                    ?\n                    <AccountView {...props} />\n                    :\n                    <GoogleLoginButton\n                        onLogin={onLogin}\n                        isLogin={setIsLogin}\n                    />\n            }\n        </div>\n    );\n}\n// export default with redux connect\nconst mapToDispatch = (dispatch) => ({\n    onLogin: (action) => dispatch(onGoogleLogin(action))\n});\nexport default connect(null,  mapToDispatch)(Account);","import React, {useState, useEffect} from 'react'\n\n// material-ui\nimport {Container} from \"@material-ui/core\";\n\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Chip from '@material-ui/core/Chip'\n\nimport {Typography} from \"@material-ui/core\";\n\n// components\nimport Account from \"./Account\";\nimport { Store } from 'Store';\n\n// style\n\nconst useStyles = makeStyles((theme) => ({\n    background: {\n        background: 'linear-gradient(45deg, #8C8CF9 30%, #74C7E3 90%)'\n    },\n    root: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        minHeight: '100vh',\n    },\n    card: {\n        width: 500,\n        borderRadius: 15,\n        boxShadow: '-8px 8px 25px 10px #73FAF8',\n    },\n    media: {\n        width:300,\n        height:257,\n        marginTop: 16,\n        marginBottom: 16,\n        margin: 'auto',\n    },\n    heading: {\n        marginTop: 10\n    },\n    center: {\n        display: 'flex',\n        justifyContent: 'center',\n    },\n    loginButton: {\n        width: 200,\n    },\n}));\n\nconst StyledChip = withStyles((theme) => ({\n    root: {\n        background: 'linear-gradient(45deg, #8C8CF9 30%, #74C7E3 90%)',\n    },\n}))(Chip);\n\n// https://preview.themeforest.net/item/dimon-react-next-app-landing-page-template/full_screen_preview/26271180?_ga=2.102474565.578745029.1614430241-1591077733.1609319700\nexport default function Landing({props, history})\n{\n    const [gotoAutoSQL, setGotoAutoSQL] = useState();\n\n    const [isLogin, setIsLogin] = useState(false)\n\n    useEffect(() => {\n        setGotoAutoSQL(<Chip label=\"AutoSQL 사용하기\" onClick={() => { history.push('/dashboard') }} />)\n    }, []);\n\n    const classes = useStyles();\n    return (\n        <div className={classes.background}>\n            <Container>\n                <div className={classes.root}>\n                    <Card\n                        \n                        className={classes.card}\n                    >\n                        <CardContent>\n\n                        </CardContent>\n                        <CardMedia\n                            className={classes.media}\n                            image=\"images/auto_sql_logo.png\"\n                            title=\"AutoSQL\"\n                        />\n                        <CardContent className={classes.center}>\n                            <Typography variant=\"h6\" display=\"block\" gutterBottom\n                                className={classes.heading}\n                            >\n                                수많은 DBMS를 위한 단 하나의 도구\n                            </Typography>\n                            \n                        </CardContent>\n                        <CardContent className={classes.center}>\n                        {\n                            isLogin ? \n                            (<StyledChip\n                                className={classes.gotoAutoSqlChip}\n                                color=\"primary\" \n                                label=\"AutoSQL 사용하기\" \n                                onClick={() => { history.push('/dashboard') }} \n                            />) \n                            : \n                            (\n                            <Typography variant=\"caption\" display=\"block\" gutterBottom className={classes.heading}>\n                                구글 로그인하여 사용하기\n                            </Typography>\n                            )\n                        }\n                        </CardContent>\n                        <CardContent className={classes.loginButton, classes.center}>\n                            <Account \n                                {...props} \n                                isLogin={isLogin} \n                                setIsLogin={setIsLogin} \n                            />\n                        </CardContent>\n                    </Card>\n                </div>\n            </Container>\n        </div>\n    );\n}","import React, {useEffect, useLayoutEffect} from 'react'\n\n// for redux\nimport {connect} from 'react-redux'\nimport {assignCurrentErd} from 'Store/VuerdData'\n\n\n// 3rd-party\nimport 'vuerd'\n//import 'vuerd/theme/auto-sql.css'\nimport 'vuerd/theme/vscode-dark.css'\n\nconst GenerateVuerd = (props) => {\n\n    const {erdData} = props;\n    const {onCurrentErd} = props;\n\n    useLayoutEffect(() => {\n        generateVuerd()\n        //console.log(props)\n    }, [erdData]);\n\n    const generateVuerd = () => {\n        let container = document.querySelector(\"#app-erd\");\n        let editor;\n        if(container.children.item(0)) {\n            container.removeChild(container.children.item(0))\n            editor = document.createElement('erd-editor');\n        }\n        else\n            editor = document.createElement('erd-editor');\n\n        container.appendChild(editor);\n\n        let payload = {\n            editor: editor\n        }\n        onCurrentErd(payload);\n\n        const data = erdData\n        editor.initLoadJson(data)\n\n        window.addEventListener(\"resize\", () => {\n            editor.width = container.parentElement.clientWidth;\n            editor.height = container.parentElement.clientHeight;\n        });\n        window.dispatchEvent(new Event(\"resize\"));\n    }\n\n    return (\n        <div id=\"app-erd\"></div>\n    );\n}\nconst mapToDispatch = (dispatch) => ({\n    onCurrentErd: (action) => dispatch(assignCurrentErd(action))\n});\n\nexport default connect(null, mapToDispatch)(GenerateVuerd);\n//export default GenerateVuerd;","import React from 'react'\n\n// material-ui\nimport Modal from '@material-ui/core/Modal'\nimport Backdrop from '@material-ui/core/Backdrop'\nimport Fade from '@material-ui/core/Fade'\n\n// style\nimport {makeStyles} from \"@material-ui/core/styles\"\n\nconst useStyles = makeStyles((theme) => ({\n    modal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        zIndex: 941206,\n    },\n    paper: {\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    },\n}));\n\nexport default function DashBoardModal(props)\n{\n    const classes = useStyles();\n\n    const [open, setOpen] = props.openHooks;\n\n    const handleClose = () => {\n        setOpen(false);\n    }\n\n    return (\n        <Modal\n            aria-labelledby=\"dashboard-modal-title\"\n            aria-describedby=\"dashboard-modal-description\"\n            className={classes.modal}\n            open={open}\n            onClose={handleClose}\n            closeAfterTransition\n            BackdropComponent={Backdrop}\n            BackdropProps={{\n                timeout: 500,\n            }}\n        >\n            <Fade \n                \n                in={open}\n            >\n                <div className={classes.paper}>\n                    <h2 id=\"dashboard-modal-title\">{props.Icon} {props.title}</h2>\n                    {props.children}\n                </div>\n            </Fade>\n        </Modal>\n    );\n}","import React, {useEffect, useState} from 'react'\n\n// components\nimport DashBoardModal from \"components/Dashboard/DashBoardComponents/DashBoardModal\";\n\nexport default function DashBoardModalButton(props)\n{\n    const [open, setOpen] = useState(false);\n    const Component = props.component;\n\n    return (\n        <>\n            <div\n                variant=\"contained\"\n                style={{\n                    width: '100%',\n                    height: '100%',\n                    margin:'auto',\n                }}\n                onClick={() => {\n                    setOpen(true)\n                }}\n            >\n                <span\n                    style={{\n                        marginRight: '10px',\n                    }}\n                >\n                    {props.Icon}\n                </span>\n                {props.children}\n            </div>\n            <DashBoardModal\n                openHooks={[open, setOpen]}\n                title={props.children}\n                Icon={props.Icon}\n            >\n                <Component\n                    setOpen={setOpen}\n                />\n            </DashBoardModal>\n        </>\n    );\n}","import React, {useState} from 'react'\n\n// material-ui\nimport Drawer from '@material-ui/core/Drawer'\nimport Typography from \"@material-ui/core/Typography\";\n\nimport {makeStyles} from \"@material-ui/core/styles\"\n\nconst useStyles = makeStyles((theme) => ({\n    center: {\n        display: 'flex',\n        justifyContent: 'center',\n        margin: '15px 0'\n    },\n}));\n\nexport default function DashBoardDrawer(props)\n{\n    const [open, setOpen] = props.openHooks\n\n    const classes = useStyles();\n\n    return (\n        <Drawer\n            anchor={props.DrawerPosition}\n            open={open}\n            onClose={() => {\n                setOpen(false)\n            }}\n        >\n            <div\n                style={{\n                    width: props.DrawerWidth\n                }}\n                className={classes.center}\n            >\n                <Typography variant=\"h6\"\n                    style={{\n                        marginRight: '10px'\n                    }}\n                >\n                    {props.Icon}\n                </Typography>\n                <Typography variant=\"h6\">\n                    {props.DrawerName}\n                </Typography>\n            </div>\n            {props.children}\n        </Drawer>\n    );\n}","import React, {useState, useEffect} from 'react'\n\n// components\nimport DashBoardDrawer from 'components/Dashboard/DashBoardComponents/DashBoardDrawer'\n\n\n\nexport default function DashBoardDrawerButton(props)\n{\n    const [open, setOpen] = useState(false);\n    const Component = props.component;\n\n    return (\n        <>\n            <div\n                variant=\"contained\"\n                style={{\n                    width: '100%',\n                    height: '100%',\n                }}\n                onClick={() => {\n                    setOpen(true)\n                }}\n            >\n                <span\n                    style={{\n                        marginRight: '10px',\n                    }}\n                >\n                    {props.Icon}\n                </span>\n                {props.children}\n            </div>\n            <DashBoardDrawer\n                openHooks={[open, setOpen]}\n                DrawerPosition={props.DrawerPosition}\n                DrawerWidth={props.DrawerWidth}\n                DrawerName={props.children}\n                Icon={props.Icon}\n            >\n                <Component\n                    onSetFunction={props.onSetFunction}\n                    onClose={() => {\n                        setOpen(false)\n                    }}\n                />\n            </DashBoardDrawer>\n        </>\n    );\n}","import {GetUserAccessToken} from 'Functions'\nexport function CreateErd(_erdName)\n{\n    let axios = require('axios')\n\n    let data = {\n        name:  _erdName,\n    }\n\n    axios.post(process.env.REACT_APP_SERVER + \"erd\",\n        JSON.stringify(data),\n        {\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Access-Control-Allow-Origin' : '*',\n                'Access-Control-Allow-Methods' : 'GET,PUT,POST,DELETE,PATCH,OPTIONS',\n                'Authorization': GetUserAccessToken(),\n            }\n        }\n    )\n        .then((response) => {\n            console.log(\"CreateErd - then\")\n            console.log(response)\n        })\n        .catch((error) => {\n            console.log(\"CreateErd - error\")\n            console.log(error)\n        })\n};\nexport async function GetErdList()\n{\n    let axios = require('axios')\n\n    return await axios.get(process.env.REACT_APP_SERVER + \"erd/list\",\n        {\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Access-Control-Allow-Origin' : '*',\n                'Access-Control-Allow-Methods' : 'GET,PUT,POST,DELETE,PATCH,OPTIONS',\n                'Authorization': GetUserAccessToken(),\n            },\n            maxContentLength: 100000000,\n            maxBodyLength: 1000000000\n        }\n    )\n}\nexport async function GetErdTimeLine(_erdName)\n{\n    let axios = require('axios')\n\n    return await axios.get(process.env.REACT_APP_SERVER + 'commit/' + _erdName,\n        {\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Access-Control-Allow-Origin' : '*',\n                'Access-Control-Allow-Methods' : 'GET,PUT,POST,DELETE,PATCH,OPTIONS',\n                'Authorization': GetUserAccessToken(),\n            },\n            maxContentLength: 100000000,\n            maxBodyLength: 1000000000\n        }\n    )\n}\nexport async function GetErd(_erdId, _commitId)\n{\n    let axios = require('axios')\n\n    return await axios.get(process.env.REACT_APP_SERVER + 'erd/' + _erdId + '/' + _commitId,\n        {\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Access-Control-Allow-Origin' : '*',\n                'Access-Control-Allow-Methods' : 'GET,PUT,POST,DELETE,PATCH,OPTIONS',\n                'Authorization': GetUserAccessToken(),\n            },\n            maxContentLength: 100000000,\n            maxBodyLength: 1000000000\n        }\n    )\n}\nexport async function GetErdForce(_erdId)\n{\n    let axios = require('axios')\n\n    return await axios.get(process.env.REACT_APP_SERVER + 'erd/' + _erdId + '/force',\n        {\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Access-Control-Allow-Origin' : '*',\n                'Access-Control-Allow-Methods' : 'GET,PUT,POST,DELETE,PATCH,OPTIONS',\n                'Authorization': GetUserAccessToken(),\n            },\n            maxContentLength: 100000000,\n            maxBodyLength: 1000000000\n        }\n    )\n}\nexport async function SaveErd(_erdName, _data)\n{\n    let axios = require('axios')\n\n    let data = {\n        data: _data\n    }\n    let token = await GetUserAccessToken();\n    console.log('토쿤' + token)\n    console.log(_erdName)\n\n    let response = await axios.post(process.env.REACT_APP_SERVER + 'commit/' + _erdName,\n        JSON.stringify(data),\n        {\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Access-Control-Allow-Origin' : '*',\n                'Access-Control-Allow-Methods' : 'GET,PUT,POST,DELETE,PATCH,OPTIONS',\n                'Authorization': token,\n            },\n            maxContentLength: 100000000,\n            maxBodyLength: 1000000000\n        }\n    );\n    console.log(response)\n    return response\n}","import React, {useEffect, useState} from 'react'\n\n// material-ui\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport SaveIcon from '@material-ui/icons/Save'\n\n// functions\nimport {CreateErd} from 'Functions/Erd'\n\nexport default function ModalItemNewErd(props)\n{\n    const [erdName, setErdName] = useState('');\n\n    const onSaveButton = () => {\n        CreateErd(erdName);\n        props.setOpen(false);\n    };\n\n    return (\n        <div style={{\n            width: '400px',\n            height: '180px',\n        }}>\n            <form noValidate autoComplete=\"off\">\n                <TextField\n                    id=\"erd-name\"\n                    label=\"ERD 이름\"\n                    variant=\"outlined\"\n                    style={{\n                        width: '100%'\n                    }}\n                    onChange={(event) => {\n                        event.preventDefault()\n                        setErdName(event.target.value)\n                    }}\n                />\n            </form>\n            <div\n                style={{\n                    width: '100%',\n                    display: 'flex',\n                    position: 'relative',\n                    top: '50px',\n                    justifyContent: 'center',\n                }}\n            >\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"large\"\n                    startIcon={<SaveIcon />}\n                    onClick={onSaveButton}\n                >\n                    만들기\n                </Button>\n            </div>\n        </div>\n    );\n}","import React, {useEffect, useState} from 'react'\n\n// for redux\nimport {connect} from 'react-redux'\nimport {assignWorkingErd} from \"Store/ErdData\";\n\n// material-ui\nimport Container from \"@material-ui/core/Container\";\nimport Accordion from '@material-ui/core/Accordion'\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport Button from '@material-ui/core/Button'\n\n// material-icon\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\n\n// functions\nimport {GetErd, GetErdList, GetErdTimeLine, GetErdForce} from \"Functions/Erd\";\n\nfunction DrawerItemErdList(props)\n{\n    const {onWorkingErd} = props\n    const {onSetFunction} = props\n    const {onClose} = props\n\n    const [list, setList] = useState([])\n\n    useEffect(() => {\n        let getErdListPromise = GetErdList()\n            .then((result) => {\n                setList(result.data.result)\n            })\n    }, [])\n\n    const onLoadButtonClick = (_erdId, _erdName) => {\n        let _commitId;\n        let _erdData;\n        let getErdForcePromise = GetErdForce(_erdId)\n            .then((result) => {\n                let forceData = result.data.result\n                _commitId = forceData.commitId\n                _erdData = forceData.erdData\n                \n                let payload = {\n                    erdId: _erdId,\n                    erdName: _erdName,\n                    commitId: _commitId,\n                    erdData: _erdData,\n                }\n                onWorkingErd(payload)\n                onSetFunction(_erdData)\n                onClose()\n            })\n\n        // let getErdTimeLinePromise = GetErdTimeLine(_erdName)\n        //     .then((result) => {\n        //         // console.log('after GetErdTimeLine')\n        //         //console.log(result)\n        //         const commitArray = result.data.result;\n        //         //console.log(commitArray[0].commitId) -> 26\n        //         _commitId = commitArray[0].commitId\n        //         return GetErd(_erdId, _commitId)\n        //     })\n        //     .then((result) => {\n        //         // console.log('after GetErd')\n        //         //console.log(result)\n        //         // console.log('GetErd data')\n        //         //console.log(result.data.result[0].data)\n        //         _erdData = result.data.result[0].data;\n\n        //         let payload = {\n        //             erdId: _erdId,\n        //             erdName: _erdName,\n        //             commitId: _commitId,\n        //             erdData: _erdData,\n        //         }\n        //         onWorkingErd(payload)\n        //         onSetFunction(_erdData)\n        //     })\n    }\n    return (\n        <Container>\n            {\n                list.map(item => (\n                    <Accordion\n                        key={item.erdId}\n                    >\n                        <AccordionSummary\n                            id={item.erdId}\n                        >\n                            {item.erdName}\n                        </AccordionSummary>\n                        <AccordionDetails>\n                            <Button\n                                variant=\"contained\"\n                                color=\"default\"\n                                startIcon={<CloudDownloadIcon/>}\n                                onClick={() => {\n                                    onLoadButtonClick(item.erdId, item.erdName)\n                                }}\n                            >\n                                불러오기\n                            </Button>\n                        </AccordionDetails>\n                    </Accordion>\n                ))\n            }\n        </Container>\n    );\n}\nconst mapToDispatch = (dispatch) => ({\n    onWorkingErd: (action) => dispatch(assignWorkingErd(action))\n});\n\nexport default connect(null, mapToDispatch)(DrawerItemErdList);","import React, {useState, useEffect} from 'react'\n\n// material-ui\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Card from \"@material-ui/core/Card\";\n\n// for redux\nimport {Store} from 'Store'\n\n// functions\nimport {SaveErd} from 'Functions/Erd'\n\nexport default function ModalItemSaveButton(props)\n{\n    const [text, setText] = useState('저장중.')\n\n    const {setOpen} = props\n\n    useEffect(async () => {\n        console.log(\"========= save button ==========\");\n        if(Store.getState().ErdData.erdId == -1) {\n            setText('선택된 ERD가 존재하지 않습니다.');\n            setTimeout(() => {\n                setOpen(false);\n            }, 1000);\n        }\n        console.log(Store.getState().VuerdData.editor.value)\n        await SaveErd(Store.getState().ErdData.erdName, Store.getState().VuerdData.editor.value)\n            .then((result) => {\n                console.log(\"SaveErd - then\")\n                console.log(result)\n                if(result.data.code === 200)\n                {\n                    setText('저장되었습니다.');\n                    setTimeout(() => {\n                        setOpen(false);\n                    }, 1000);\n                }\n            })\n            .catch((error) => {\n                console.log(\"SaveErd - error\")\n                console.log(error)\n            })\n    }, [])\n\n    return (\n        <>\n            <div style={{\n                display: 'flex',\n                justifyContent: 'center',\n            }}>\n                {text}\n            </div>\n            <div style={{\n                display: 'flex',\n                justifyContent: 'center',\n                marginTop: '20px'\n            }}>\n                <CircularProgress color=\"inherit\" />\n            </div>\n        </>\n    );\n}","import React, {useEffect, useLayoutEffect, useState} from 'react'\n\n// material-ui\nimport Container from '@material-ui/core/Container'\nimport Timeline from '@material-ui/lab/Timeline';\nimport TimelineItem from '@material-ui/lab/TimelineItem';\nimport TimelineSeparator from '@material-ui/lab/TimelineSeparator';\nimport TimelineConnector from '@material-ui/lab/TimelineConnector';\nimport TimelineContent from '@material-ui/lab/TimelineContent';\nimport TimelineOppositeContent from '@material-ui/lab/TimelineOppositeContent';\nimport TimelineDot from '@material-ui/lab/TimelineDot';\nimport {Typography} from \"@material-ui/core\";\n\nimport Chip from \"@material-ui/core/Chip\"\nimport FaceIcon from '@material-ui/icons/Face';\n\n// for redux\nimport {Store} from 'Store'\nimport {connect} from 'react-redux'\nimport {assignWorkingErd} from \"Store/ErdData\";\n\n// functions\nimport {GetErdTimeLine} from 'Functions/Erd'\nimport {GetErd, GetErdList} from \"Functions/Erd\";\n\n// styles\nimport {makeStyles} from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        padding: '5px 10px',\n        width: 'auto',\n    },\n}));\n\n// Local Function\nconst LookGoodDate = (_DateObj) => {\n    let dateObj = new Date(_DateObj);\n    let dateString = dateObj.getFullYear() + \"년 \" + (dateObj.getMonth() + 1) + \"월 \" + dateObj.getDate() + \"일\"\n    return dateString\n}\nconst LookGoodTime = (_DateObj) => {\n    let dateObj = new Date(_DateObj);\n    let timeString = dateObj.getHours() + \"시 \" + dateObj.getMinutes() + \"분 \" + dateObj.getSeconds() + \"초\"\n    return timeString\n}\n\nfunction DrawerItemCommits(props)\n{\n    const [primaryIndex, setPrimaryIndex] = useState(0);\n\n    const {onClose} = props\n\n    //for erd\n    const {onWorkingErd} = props\n    const {onSetFunction} = props\n\n    //for list\n    const [list, setList] = useState([]);\n\n    const classes = useStyles();\n\n\n    // timeline 생성\n    useEffect(() => {\n        GetErdTimeLine(Store.getState().ErdData.erdName)\n            .then((result) => {\n                setList(result.data.result);\n                result.data.result.map((item) => {\n                    if(Store.getState().ErdData.commitId === item.commitId) {\n                        setPrimaryIndex(item.commitId)\n                    }\n                })\n            })\n    }, [])\n\n    const onLoadButtonClick = (_commitId) => {\n        let erdId = Store.getState().ErdData.erdId\n        let erdName = Store.getState().ErdData.erdName\n        let commitId = _commitId;\n        setPrimaryIndex(commitId)\n\n        let getErdPromise = GetErd(erdId, commitId)\n            .then((result) => {\n                if(result.data.code === 200)\n                {\n                    let _erdData = result.data.result[0].data\n                    let payload = {\n                        erdId: erdId,\n                        erdName: erdName,\n                        commitId: commitId,\n                        erdData: _erdData\n                    }\n                    onWorkingErd(payload)\n                    onSetFunction(_erdData)\n                    onClose()\n                }\n                \n            })\n    }\n\n    return (\n        <Container>\n            <Timeline align=\"alternate\">\n                {\n                    list.slice(0).reverse().map((item) => (\n                        <TimelineItem\n                            key={item.commitId}\n                        >\n                            <TimelineOppositeContent>\n                                <Typography variant=\"body2\" color={item.commitId === primaryIndex ? \"primary\" : \"textSecondary\"}>\n                                    주요 변경 사항\n                                </Typography>\n                            </TimelineOppositeContent>\n                            <TimelineSeparator>\n                                <TimelineConnector />\n                                <TimelineDot>\n                                    {item.commitId}\n                                </TimelineDot>\n                            </TimelineSeparator>\n                            <TimelineContent>\n                                <div className={classes.paper}>\n                                    {/* Store.getState().ErdData.commitId === item.commitId ? \"primary\" : \"default\" */}\n                                    <Chip\n                                        icon={<FaceIcon />}\n                                        label={item.createdWho}\n                                        clickable\n                                        color={item.commitId === primaryIndex ? \"primary\" : \"default\"}\n                                        onClick={(event) =>{\n                                            onLoadButtonClick(item.commitId)\n                                        }}\n                                    />\n                                    <Typography variant=\"caption\" display=\"block\" gutterBottom>\n                                        {\n                                            LookGoodDate(item.createdAt)\n                                        }\n                                            <br />\n                                        {\n                                            LookGoodTime(item.createdAt)\n                                        }\n                                    </Typography>\n                                </div>\n                                {/* <Paper elevation={3} className={classes.paper}>\n                                    <Typography variant=\"button\">\n                                        {item.createdWho}\n                                    </Typography>\n                                    <Typography variant=\"body1\" component=\"h1\">\n                                        {\n                                            LookGoodDate(item.createdAt)\n                                        }\n                                    </Typography>\n                                    <Typography variant=\"body1\">\n                                        {\n                                            LookGoodTime(item.createdAt)\n                                        }\n                                    </Typography>\n                                </Paper> */}\n                            </TimelineContent>\n                        </TimelineItem>\n                    ))\n                }\n            </Timeline>\n        </Container>\n    );\n}\nconst mapToDispatch = (dispatch) => ({\n    onWorkingErd: (action) => dispatch(assignWorkingErd(action))\n});\nexport default connect(null, mapToDispatch)(DrawerItemCommits);","import React, { useEffect, useLayoutEffect, useState } from 'react'\n\n// for redux\nimport { Store } from 'Store'\n\n// components\nimport GenerateVuerd from 'components/Dashboard/generateVuerd'\nimport DashBoardModalButton from 'components/Dashboard/DashBoardButton/DashBoardModalButton'\nimport DashBoardDrawerButton from 'components/Dashboard/DashBoardButton/DashBoardDrawerButton'\n\n// DashBoard components\nimport ModalItemNewErd from 'components/Dashboard/DashBoardComponents/ModalItemNewErd'\nimport DrawerItemErdList from \"components/Dashboard/DashBoardComponents/DrawerItemErdList\";\nimport ModalItemSaveButton from 'components/Dashboard/DashBoardComponents/ModalItemSaveButton'\nimport DrawerItemCommits from 'components/Dashboard/DashBoardComponents/DrawerItemCommits'\n\n// material-ui\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Fab from '@material-ui/core/Fab';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport BuildIcon from '@material-ui/icons/Build';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport AddBoxIcon from '@material-ui/icons/AddBox';\nimport SystemUpdateAltIcon from '@material-ui/icons/SystemUpdateAlt';\nimport SaveIcon from '@material-ui/icons/Save';\nimport SettingsBackupRestoreIcon from '@material-ui/icons/SettingsBackupRestore';\n\n// 3rd-party\nimport Draggable from 'react-draggable'\n\n// style\nimport './index.css'\n\nconst useStyles = makeStyles((theme) => ({\n    extendedIcon: {\n        marginRight: theme.spacing(1),\n    },\n    FloatingButton: {\n        zIndex: 999,\n        width: '60px',\n        height: '40px',\n        boxShadow: '-0px 0px 10px 2px #73FAF8',\n    },\n}));\n\nconst StyledMenu = withStyles({\n    paper: {\n        border: '1px solid #d3d4d5',\n    },\n})((props) => (\n    <Menu\n        elevation={0}\n        getContentAnchorEl={null}\n        anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'center',\n        }}\n        transformOrigin={{\n            vertical: 'top',\n            horizontal: 'center',\n        }}\n        {...props}\n    />\n));\n\nconst StyledMenuItem = withStyles((theme) => ({\n    root: {\n        '&:hover': {\n            backgroundColor: theme.palette.primary.main,\n        },\n    },\n}))(MenuItem);\n\nexport default function Dashboard(props) {\n    // for redux\n    const [erdData, setErdData] = useState({});\n\n    useLayoutEffect(() => {\n        setErdData(Store.getState().ErdData.erdData)\n        // console.log('DashBoard index - setErdData')\n        // console.dir(erdData)\n    }, [Store.getState().ErdData.erdData])\n\n    //style\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = useState(null);\n    const [dragging, setDragging] = useState(false);\n\n    const handleClick = (event) => {\n        if (!dragging)\n            setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n\n    return (\n        <>\n            <header style={{\n                height: '50px',\n                backgroundColor: '#333333',\n                display: 'flex'\n            }}>\n                <Draggable\n                    defaultPosition={{ x: 100, y: 120 }}\n                    scale={1}\n                    position={null}\n                    onDrag={() => {\n                        setDragging(true)\n                    }}\n                    onStop={() => {\n                        setTimeout(() => {\n                            setDragging(false)\n                        }, 200);\n                    }}\n                >\n                    <Fab\n                        variant=\"extended\"\n                        size=\"medium\"\n                        color=\"primary\"\n                        aria-label=\"add\"\n                        className={classes.margin, classes.FloatingButton}\n                        onClick={handleClick}\n                    >\n                        <BuildIcon className={classes.extendedIcon} />\n                        작업\n                    </Fab>\n                </Draggable>\n                <StyledMenu\n                    id=\"customized-menu\"\n                    anchorEl={anchorEl}\n                    keepMounted\n                    open={Boolean(anchorEl)}\n                    onClose={handleClose}\n                >\n                    <StyledMenuItem>\n                        <DashBoardModalButton\n                            component={ModalItemNewErd}\n                            Icon={<AddBoxIcon fontSize=\"small\" />}\n                        >\n                            새로작성\n                        </DashBoardModalButton>\n                    </StyledMenuItem>\n                    <StyledMenuItem>\n                        <DashBoardDrawerButton\n                            DrawerWidth=\"300px\"\n                            DrawerPosition=\"left\"\n                            component={DrawerItemErdList}\n                            onSetFunction={setErdData}\n                            Icon={<SystemUpdateAltIcon fontSize=\"small\" />}\n                        >\n                            불러오기\n                        </DashBoardDrawerButton>\n                    </StyledMenuItem>\n                    <StyledMenuItem>\n                        <DashBoardModalButton\n                            component={ModalItemSaveButton}\n                            Icon={<SaveIcon fontSize=\"small\" />}\n                        >\n                            저장하기\n                        </DashBoardModalButton>\n                    </StyledMenuItem>\n                    <StyledMenuItem>\n                        <DashBoardDrawerButton\n                            DrawerWidth=\"500px\"\n                            DrawerPosition=\"right\"\n                            component={DrawerItemCommits}\n                            onSetFunction={setErdData}\n                            Icon={<SettingsBackupRestoreIcon fontSize=\"small\" />}\n                        >\n                            변경사항\n                        </DashBoardDrawerButton>\n                    </StyledMenuItem>\n                </StyledMenu>\n            </header>\n            <div style={{\n                height: '100%'\n            }}>\n                <GenerateVuerd\n                    {...props}\n                    erdData={erdData}\n                />\n            </div>\n        </>\n    );\n}","import React from 'react'\n\n// 3rd-party\nimport {\n    BrowserRouter,\n    Route,\n    Switch,\n} from 'react-router-dom';\n\n// components\nimport Landing from 'components/Landing'\nimport Dashboard from 'components/Dashboard'\n\nexport default function Root()\n{\n    return (\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n            <Switch>\n                <Route exact path='/' component={Landing}/>\n                <Route path='/dashboard' component={Dashboard}/>\n            </Switch>\n        </BrowserRouter>\n    );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Root from 'components/Root';\n\n// 3rd-party\nimport {Provider} from 'react-redux'\nimport {PersistGate} from \"redux-persist/integration/react\";\n\n// applictaion\nimport {Store, Persistor} from 'Store'\n\nReactDOM.render(\n  <Provider store={Store}>\n      <PersistGate persistor={Persistor}>\n        <Root />\n      </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n);\n","import {createAction, handleActions} from 'redux-actions'\n\nconst WORKING_ERD = 'ErdData/WORKING_ERD'\n\nexport const assignWorkingErd = createAction(WORKING_ERD);\n\nexport const initialState = {\n    erdId: -1,\n    erdName: '',\n    commitId: -1,\n    erdData: {},\n};\n\nconst ErdDataReducer = handleActions({\n    [WORKING_ERD]: (state, action) => {\n        return Object.assign({}, state, action.payload);\n    },\n}, initialState);\n\nexport default ErdDataReducer;","import {createAction, handleActions} from 'redux-actions'\n\nconst LOGIN = 'User/LOGIN';\nconst LOGOUT = 'User/LOGOUT';\n\nexport const onGoogleLogin = createAction(LOGIN);\nexport const onGoogleLogout = createAction(LOGOUT);\n\nexport const initalState = {\n    id: 0,\n    email: '',\n    name: '',\n    imageURL: '',\n    expires_in: 0,\n    hashedEmail: '',\n    accessToken: '',\n    refreshToken: '',\n}\n\nconst UserReducer = handleActions({\n    [LOGIN]: (state, action) => {\n        return Object.assign({}, state, action.payload);\n    },\n    [LOGOUT]: (state) => {\n        return initalState\n    },\n}, initalState);\n\nexport default UserReducer;","import {createAction, handleActions} from 'redux-actions'\n\nconst CURRENT_ERD = 'VuerdData/CURRENT_ERD'\n\nexport const assignCurrentErd = createAction(CURRENT_ERD);\n\nexport const initialState = {\n    editor: {}\n};\n\nconst VuerdDataReducer = handleActions({\n    [CURRENT_ERD]: (state, action) => {\n        return Object.assign({}, state, action.payload);\n    },\n}, initialState)\n\nexport default VuerdDataReducer;"],"sourceRoot":""}